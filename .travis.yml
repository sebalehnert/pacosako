language: rust
dist: focal
addons:
  apt:
    packages:
      - libssl-dev
  snaps:
    - name: node
      confinement: classic
      channel: 15/stable
cache:
  - cargo
  - "$TRAVIS_BUILD_DIR/backend/target"
  - "$TRAVIS_BUILD_DIR/lib/target"
# We don't want coverage to be cached and uploaded again on the next build.
# So we are removing them just to be sure.
before_cache:
  - rm -f $TRAVIS_BUILD_DIR/backend/target/tarpaulin
  - rm -f $TRAVIS_BUILD_DIR/lib/target/tarpaulin
rust:
  - nightly-2021-01-30

before_script: |
  bash <(curl https://raw.githubusercontent.com/xd009642/tarpaulin/master/travis-install.sh)
  cargo install --version=0.2.0 sqlx-cli
  curl -L -o elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz
  sudo npm install -g elm-spa@latest typescript uglify-js
  gunzip elm.gz
  chmod +x elm
  cat scripts/known_hosts >> ~/.ssh/known_hosts
  chmod 400 ./scripts/travis_ionos
  eval "$(ssh-agent -s)"
  ssh-add ./scripts/travis_ionos

script: |
  # test backend
  cd backend
  mkdir -p data
  sqlx database create
  sqlx migrate run
  cargo clean
  cargo build
  cargo test
  cd ..

  # build frontend
  cd frontend
  elm-spa build
  ../elm make src/Main.elm --output=../target/elm.js
  cd ..

  # Create and upload a report for codecov.io
  # Token is not required on Travis-CI, [..] for public repositories.
  cd backend
  cargo tarpaulin --ignore-tests --out Xml --exclude-files ../*
  bash <(curl -s https://codecov.io/bash)

  # Next we also run tests for the library
  cd ../lib
  cargo tarpaulin --ignore-tests --out Xml
  bash <(curl -s https://codecov.io/bash)

after_success: |
  # Now we do the deployment
  cd ..
  chmod +x ./scripts/deploy.sh
  ./scripts/deploy.sh

before_install:
  - openssl aes-256-cbc -K $encrypted_8097fc376f37_key -iv $encrypted_8097fc376f37_iv
    -in scripts/travis_ionos.enc -out scripts/travis_ionos -d
